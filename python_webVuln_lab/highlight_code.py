# highlight_code.py

from pygments import highlight
from pygments.lexers import PythonLexer
from pygments.formatters import HtmlFormatter

def ssti():
    python_code = """
     
    name = request.form.get('name', '')
    
    if request.method == 'POST':
        # Handle the form submission
        content = render_template_string('Hello ' + name + '!')
        return render_template('index.html', content=content, highlighted_code=highlight_code.ssti())
        
    # Render the form
    if request.method == 'GET':
        return render_template('index.html', highlighted_code=highlight_code.ssti())"""
    highlighted_code = highlight(python_code, PythonLexer(), HtmlFormatter())
    return highlighted_code

def bool_sqli():
    python_code = """
     
    email = request.form['email']
    passwordHash = hash_password(request.form['password'])

    # Execute a simple SQL query with user input (vulnerable to SQL injection)
    query = "SELECT * FROM users WHERE email='" + email + "' AND passwordHash='" + passwordHash + "'"
    cursor.execute(query)
    user = cursor.fetchone()

    if user:
        return true
    else:
        return false"""
    highlighted_code = highlight(python_code, PythonLexer(), HtmlFormatter())
    return highlighted_code

def time_sqli():
    python_code = """
     
    try:
        if request.method == 'POST':
            email = request.form['email']
            message = request.form['message']

            # Execute an query to add a feedback to the DB
            query = f"INSERT INTO feedback (email, message) VALUES ('{email}', '{message}')"
            cursor.execute(query)

            return 'Message sent successfully!'
        return render_template('feedback.html', highlighted_code=highlight_code.time_sqli())
    except Exception:
        return "Message sent successfully!" """
    highlighted_code = highlight(python_code, PythonLexer(), HtmlFormatter())
    return highlighted_code

def union_sqli():
    python_code = """
     
    if request.method == 'POST':
        keyword = request.form['keyword']
        
        # Execute a search query based on user input
        query = f"SELECT * FROM users WHERE fullname LIKE '%{keyword}%'"
        cursor.execute(query)
        results = cursor.fetchall()

        return render_template('search_user.html', results=results)"""
    highlighted_code = highlight(python_code, PythonLexer(), HtmlFormatter())
    return highlighted_code
def err_sqli():
    python_code = """
     
    try:
        email = request.form['email']
        passwordHash = hash_password(request.form['password'])

        # Execute a simple SQL query with user input (vulnerable to SQL injection)
        query = "SELECT * FROM users WHERE email='" + email + "' AND passwordHash='" + passwordHash + "'"
        cursor.execute(query)
        user = cursor.fetchone()

        if user:
            return render_template('err_login.html', notification='Login successfully!')
        else:
            return render_template('err_login.html', notification='Login failed!')
    except Exception:
        return render_template('err_login.html', notification=Exception"""
    highlighted_code = highlight(python_code, PythonLexer(), HtmlFormatter())
    return highlighted_code